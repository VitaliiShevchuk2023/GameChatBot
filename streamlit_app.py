import streamlit as st
import random
import time
from datetime import datetime

# üéÆ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(
    page_title="üéÆ –†–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏–π –ß–∞—Ç-–ë–æ—Ç",
    page_icon="ü§ñ",
    layout="wide"
)

# üìä –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def init_stats():
    if 'stats' not in st.session_state:
        st.session_state.stats = {
            'games_played': 0,
            'jokes_told': 0,
            'movies_recommended': 0,
            'start_time': datetime.now()
        }

# üéØ –Ü–≥—Ä–∏
def rock_paper_scissors():
    """–ì—Ä–∞ –ö–∞–º—ñ–Ω—å-–ù–æ–∂–∏—Ü—ñ-–ü–∞–ø—ñ—Ä"""
    st.subheader("üéØ –ö–∞–º—ñ–Ω—å-–ù–æ–∂–∏—Ü—ñ-–ü–∞–ø—ñ—Ä")
    
    choices = {'ü™®': '–ö–∞–º—ñ–Ω—å', '‚úÇÔ∏è': '–ù–æ–∂–∏—Ü—ñ', 'üìÑ': '–ü–∞–ø—ñ—Ä'}
    
    col1, col2, col3 = st.columns(3)
    
    user_choice = None
    with col1:
        if st.button("ü™® –ö–∞–º—ñ–Ω—å", use_container_width=True):
            user_choice = '–ö–∞–º—ñ–Ω—å'
    with col2:
        if st.button("‚úÇÔ∏è –ù–æ–∂–∏—Ü—ñ", use_container_width=True):
            user_choice = '–ù–æ–∂–∏—Ü—ñ'
    with col3:
        if st.button("üìÑ –ü–∞–ø—ñ—Ä", use_container_width=True):
            user_choice = '–ü–∞–ø—ñ—Ä'
    
    if user_choice:
        bot_choice = random.choice(['–ö–∞–º—ñ–Ω—å', '–ù–æ–∂–∏—Ü—ñ', '–ü–∞–ø—ñ—Ä'])
        
        st.write(f"**–í–∞—à –≤–∏–±—ñ—Ä:** {user_choice}")
        st.write(f"**–í–∏–±—ñ—Ä –±–æ—Ç–∞:** {bot_choice}")
        
        # –õ–æ–≥—ñ–∫–∞ –≥—Ä–∏
        if user_choice == bot_choice:
            st.info("ü§ù –ù—ñ—á–∏—è!")
        elif (user_choice == '–ö–∞–º—ñ–Ω—å' and bot_choice == '–ù–æ–∂–∏—Ü—ñ') or \
             (user_choice == '–ù–æ–∂–∏—Ü—ñ' and bot_choice == '–ü–∞–ø—ñ—Ä') or \
             (user_choice == '–ü–∞–ø—ñ—Ä' and bot_choice == '–ö–∞–º—ñ–Ω—å'):
            st.success("üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏!")
        else:
            st.error("üòÖ –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏!")
        
        st.session_state.stats['games_played'] += 1

def guess_number_game():
    """–ì—Ä–∞ –≤–≥–∞–¥–∞–π —á–∏—Å–ª–æ"""
    st.subheader("üî¢ –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 50")
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏
    if 'number_to_guess' not in st.session_state:
        st.session_state.number_to_guess = random.randint(1, 50)
        st.session_state.attempts = 0
        st.session_state.game_over = False
    
    if not st.session_state.game_over:
        guess = st.number_input("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ:", min_value=1, max_value=50, step=1)
        
        if st.button("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏"):
            st.session_state.attempts += 1
            target = st.session_state.number_to_guess
            
            if guess == target:
                st.success(f"üéâ –í—ñ—Ç–∞—é! –í–∏ –≤–≥–∞–¥–∞–ª–∏ –∑–∞ {st.session_state.attempts} —Å–ø—Ä–æ–±!")
                st.balloons()
                st.session_state.game_over = True
                st.session_state.stats['games_played'] += 1
            elif guess < target:
                st.info("üìà –ú–æ—î —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ!")
            else:
                st.info("üìâ –ú–æ—î —á–∏—Å–ª–æ –º–µ–Ω—à–µ!")
            
            st.write(f"–°–ø—Ä–æ–±: {st.session_state.attempts}")
    
    if st.button("üîÑ –ù–æ–≤–∞ –≥—Ä–∞"):
        for key in ['number_to_guess', 'attempts', 'game_over']:
            if key in st.session_state:
                del st.session_state[key]
        st.rerun()

def simple_quiz():
    """–ü—Ä–æ—Å—Ç–∞ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∞"""
    st.subheader("üß† –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞")
    
    questions = [
        {
            "question": "–Ø–∫–∞ –º–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –º–∞—î –ª–æ–≥–æ—Ç–∏–ø –∑ –∑–º—ñ—î—é?",
            "options": ["Java", "Python", "JavaScript", "C++"],
            "correct": 1
        },
        {
            "question": "–°–∫—ñ–ª—å–∫–∏ –±—ñ—Ç –≤ –æ–¥–Ω–æ–º—É –±–∞–π—Ç—ñ?",
            "options": ["4", "8", "16", "32"],
            "correct": 1
        },
        {
            "question": "–©–æ –æ–∑–Ω–∞—á–∞—î WWW?",
            "options": ["World Wide Web", "World Web Wide", "Web Wide World", "Wide World Web"],
            "correct": 0
        }
    ]
    
    if 'quiz_question' not in st.session_state:
        st.session_state.quiz_question = 0
        st.session_state.quiz_score = 0
    
    if st.session_state.quiz_question < len(questions):
        q = questions[st.session_state.quiz_question]
        st.write(f"**–ü–∏—Ç–∞–Ω–Ω—è {st.session_state.quiz_question + 1}:** {q['question']}")
        
        answer = st.radio("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", q['options'])
        
        if st.button("–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏"):
            if q['options'].index(answer) == q['correct']:
                st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
                st.session_state.quiz_score += 1
            else:
                st.error(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {q['options'][q['correct']]}")
            
            st.session_state.quiz_question += 1
            time.sleep(1)
            st.rerun()
    else:
        st.write("### üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏")
        score = st.session_state.quiz_score
        total = len(questions)
        
        if score == total:
            st.success(f"üéâ –í—ñ–¥–º—ñ–Ω–Ω–æ! {score}/{total}")
        elif score >= total // 2:
            st.info(f"üëç –î–æ–±—Ä–µ! {score}/{total}")
        else:
            st.warning(f"üìö –ú–æ–∂–Ω–∞ –∫—Ä–∞—â–µ! {score}/{total}")
        
        if st.button("üîÑ –ü—Ä–æ–π—Ç–∏ –∑–Ω–æ–≤—É"):
            st.session_state.quiz_question = 0
            st.session_state.quiz_score = 0
            st.session_state.stats['games_played'] += 1
            st.rerun()

# üòÑ –ê–Ω–µ–∫–¥–æ—Ç–∏ —Ç–∞ –∂–∞—Ä—Ç–∏
def show_jokes():
    """–ü–æ–∫–∞–∑ –∞–Ω–µ–∫–¥–æ—Ç—ñ–≤"""
    st.subheader("üòÑ –ê–Ω–µ–∫–¥–æ—Ç–∏")
    
    ukrainian_jokes = [
        "–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –¥–æ–¥–æ–º—É:\n- –î–æ—Ä–æ–≥–∏–π, –∫—É–ø–∏ —Ö–ª—ñ–±–∞, –∞ —è–∫—â–æ –±—É–¥—É—Ç—å —è–π—Ü—è - –≤—ñ–∑—å–º–∏ –¥–µ—Å—è—Ç–æ–∫.\n–ü–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –∑ 10 –±—É—Ö–∞–Ω–∫–∞–º–∏:\n- –Ø–π—Ü—è –±—É–ª–∏!",
        
        "–î—Ä—É–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∞:\n- –°—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –º–æ–ª–æ–∫–æ–º.\n- –î–æ–±—Ä–µ.\n(—á–µ—Ä–µ–∑ 3 –≥–æ–¥–∏–Ω–∏)\n- –¢–∏ –¥–µ?\n- –£ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ–º—É —Ü–∏–∫–ª—ñ –±—ñ–ª—è –º–æ–ª–æ—á–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É.",
        
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø–ª—É—Ç–∞—é—Ç—å –†—ñ–∑–¥–≤–æ —ñ –•–µ–ª–æ–≤—ñ–Ω?\n–ë–æ 25 DEC = 31 OCT!",
        
        "–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –ª–µ–∂–∏—Ç—å –≤–º–∏—Ä–∞—é—á–∏:\n- –î–æ—Ä–æ–≥–∏–π, –æ—Å—Ç–∞–Ω–Ω—ñ —Å–ª–æ–≤–∞?\n- –¢–∞–∫... Error 404: life not found.",
        
        "–ó—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –¥–≤–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏:\n- –Ø–∫ —Å–ø—Ä–∞–≤–∏?\n- –Ø–∫ –≤ UTF-8: —ñ–Ω–æ–¥—ñ –æ–¥–∏–Ω –±–∞–π—Ç, —ñ–Ω–æ–¥—ñ —á–æ—Ç–∏—Ä–∏."
    ]
    
    programmer_jokes = [
        "There are only 10 types of people: those who understand binary and those who don't.",
        "Why do programmers prefer dark mode? Because light attracts bugs!",
        "How many programmers does it take to change a light bulb? None, that's a hardware problem.",
        "A SQL query goes into a bar, walks up to two tables and asks: 'Can I join you?'"
    ]
    
    col1, col2 = st.columns(2)
    
    with col1:
        if st.button("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç", use_container_width=True):
            joke = random.choice(ukrainian_jokes)
            st.info(joke)
            st.session_state.stats['jokes_told'] += 1
    
    with col2:
        if st.button("üá∫üá∏ Programming Joke", use_container_width=True):
            joke = random.choice(programmer_jokes)
            st.info(joke)
            st.session_state.stats['jokes_told'] += 1

# üé¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ñ—ñ–ª—å–º—ñ–≤
def movie_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ñ—ñ–ª—å–º—ñ–≤"""
    st.subheader("üé¨ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ñ—ñ–ª—å–º—ñ–≤")
    
    movies = {
        "–ö–æ–º–µ–¥—ñ—è": [
            {"title": "–ú–∞—Å–∫–∞", "year": 1994, "rating": "7.9/10"},
            {"title": "–û–¥–∏–Ω –≤–¥–æ–º–∞", "year": 1990, "rating": "8.2/10"},
            {"title": "–ë—Ä—é—Å –í—Å–µ–º–æ–≥—É—Ç–Ω—ñ–π", "year": 2003, "rating": "6.8/10"}
        ],
        "–ë–æ–π–æ–≤–∏–∫": [
            {"title": "–ú–∞—Ç—Ä–∏—Ü—è", "year": 1999, "rating": "8.7/10"},
            {"title": "–î–∂–æ–Ω –í—ñ–∫", "year": 2014, "rating": "7.4/10"},
            {"title": "–ú–µ—Å–Ω–∏–∫–∏", "year": 2012, "rating": "8.0/10"}
        ],
        "–î—Ä–∞–º–∞": [
            {"title": "–í—Ç–µ—á–∞ –∑ –®–æ—É—à–µ–Ω–∫–∞", "year": 1994, "rating": "9.3/10"},
            {"title": "–§–æ—Ä–µ—Å—Ç –ì–∞–º–ø", "year": 1994, "rating": "8.8/10"},
            {"title": "–•—Ä–µ—â–µ–Ω–∏–π –±–∞—Ç—å–∫–æ", "year": 1972, "rating": "9.2/10"}
        ]
    }
    
    genre = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∂–∞–Ω—Ä:", list(movies.keys()))
    
    if st.button("üé≤ –†–µ–∫–æ–º–µ–Ω–¥—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å–º"):
        movie = random.choice(movies[genre])
        
        st.success(f"**{movie['title']}** ({movie['year']})")
        st.write(f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {movie['rating']}")
        
        st.session_state.stats['movies_recommended'] += 1

# üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
def show_statistics():
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    st.subheader("üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    stats = st.session_state.stats
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("üéÆ –Ü–≥–æ—Ä –∑—ñ–≥—Ä–∞–Ω–æ", stats['games_played'])
    
    with col2:
        st.metric("üòÑ –ñ–∞—Ä—Ç—ñ–≤ —Ä–æ–∑–∫–∞–∑–∞–Ω–æ", stats['jokes_told'])
    
    with col3:
        st.metric("üé¨ –§—ñ–ª—å–º—ñ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ", stats['movies_recommended'])
    
    # –ß–∞—Å —É –¥–æ–¥–∞—Ç–∫—É
    time_spent = datetime.now() - stats['start_time']
    minutes = int(time_spent.total_seconds() / 60)
    st.write(f"‚è±Ô∏è –ß–∞—Å —É —á–∞—Ç-–±–æ—Ç—ñ: {minutes} —Ö–≤–∏–ª–∏–Ω")
    
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"):
        st.session_state.stats = {
            'games_played': 0,
            'jokes_told': 0,
            'movies_recommended': 0,
            'start_time': datetime.now()
        }
        st.success("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—â–µ–Ω–∞!")
        st.rerun()

# üé® –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏
def interesting_facts():
    """–¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏"""
    st.subheader("üßê –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏")
    
    facts = [
        "üêô –í–æ—Å—å–º–∏–Ω–æ–≥–∏ –º–∞—é—Ç—å —Ç—Ä–∏ —Å–µ—Ä—Ü—è —ñ –±–ª–∞–∫–∏—Ç–Ω—É –∫—Ä–æ–≤!",
        "üçØ –ú–µ–¥ - —î–¥–∏–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç, —è–∫–∏–π –Ω—ñ–∫–æ–ª–∏ –Ω–µ –ø—Å—É—î—Ç—å—Å—è.",
        "üåô –ú—ñ—Å—è—Ü—å –≤—ñ–¥–¥–∞–ª—è—î—Ç—å—Å—è –≤—ñ–¥ –ó–µ–º–ª—ñ –Ω–∞ 3.8 —Å–º —â–æ—Ä—ñ—á–Ω–æ.",
        "üêß –ü—ñ–Ω–≥–≤—ñ–Ω–∏ –º–æ–∂—É—Ç—å —Å—Ç—Ä–∏–±–∞—Ç–∏ –Ω–∞ –≤–∏—Å–æ—Ç—É –¥–æ 3 –º–µ—Ç—Ä—ñ–≤!",
        "üß† –õ—é–¥—Å—å–∫–∏–π –º–æ–∑–æ–∫ —Å–ø–æ–∂–∏–≤–∞—î 20% –µ–Ω–µ—Ä–≥—ñ—ó —Ç—ñ–ª–∞.",
        "üåç –î–µ–Ω—å –Ω–∞ –í–µ–Ω–µ—Ä—ñ –¥–æ–≤—à–∏–π –∑–∞ —Ä—ñ–∫ –Ω–∞ –í–µ–Ω–µ—Ä—ñ.",
        "üî• –ë–ª–∏—Å–∫–∞–≤–∫–∞ –≤ 5 —Ä–∞–∑—ñ–≤ –≥–∞—Ä—è—á—ñ—à–∞ –∑–∞ –ø–æ–≤–µ—Ä—Ö–Ω—é –°–æ–Ω—Ü—è.",
        "üêù –ë–¥–∂–æ–ª–∏ –º–æ–∂—É—Ç—å —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞—Ç–∏ –ª—é–¥—Å—å–∫—ñ –æ–±–ª–∏—á—á—è."
    ]
    
    if st.button("üí° –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç", use_container_width=True):
        fact = random.choice(facts)
        st.info(fact)

# üè† –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É"""
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    init_stats()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.title("ü§ñ –†–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏–π –ß–∞—Ç-–ë–æ—Ç")
    st.markdown("---")
    
    # –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å –∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
    with st.sidebar:
        st.header("üß≠ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è")
        
        menu_options = [
            "üè† –ì–æ–ª–æ–≤–Ω–∞",
            "üéÆ –Ü–≥—Ä–∏", 
            "üòÑ –ê–Ω–µ–∫–¥–æ—Ç–∏",
            "üé¨ –§—ñ–ª—å–º–∏",
            "üßê –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏",
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
        ]
        
        choice = st.radio("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", menu_options)
        
        st.markdown("---")
        st.write("**–®–≤–∏–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**")
        st.write(f"üéÆ –Ü–≥–æ—Ä: {st.session_state.stats['games_played']}")
        st.write(f"üòÑ –ñ–∞—Ä—Ç—ñ–≤: {st.session_state.stats['jokes_told']}")
        st.write(f"üé¨ –§—ñ–ª—å–º—ñ–≤: {st.session_state.stats['movies_recommended']}")
    
    # –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    if choice == "üè† –ì–æ–ª–æ–≤–Ω–∞":
        st.header("–í—ñ—Ç–∞—î–º–æ –≤ —Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–æ–º—É —á–∞—Ç-–±–æ—Ç—ñ! üëã")
        
        st.markdown("""
        ### üéØ –©–æ —è –º–æ–∂—É:
        - üéÆ **–Ü–≥—Ä–∏**: –ö–∞–º—ñ–Ω—å-–Ω–æ–∂–∏—Ü—ñ-–ø–∞–ø—ñ—Ä, –≤–≥–∞–¥–∞–π —á–∏—Å–ª–æ, –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∞
        - üòÑ **–ê–Ω–µ–∫–¥–æ—Ç–∏**: –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ç–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ –∂–∞—Ä—Ç–∏  
        - üé¨ **–§—ñ–ª—å–º–∏**: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∑–∞ –∂–∞–Ω—Ä–∞–º–∏
        - üßê **–§–∞–∫—Ç–∏**: –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏ –ø—Ä–æ —Å–≤—ñ—Ç
        - üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**: –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        
        üëà **–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –∑ –±–æ–∫–æ–≤–æ—ó –ø–∞–Ω–µ–ª—ñ!**
        """)
        
        # –®–≤–∏–¥–∫—ñ –¥—ñ—ó
        st.subheader("‚ö° –®–≤–∏–¥–∫—ñ –¥—ñ—ó")
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç"):
                jokes = [
                    "–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –±–∞—Ä... –ù—ñ, —Ü–µ –Ω–µ –∂–∞—Ä—Ç, –≤—ñ–Ω –ø—Ä–æ—Å—Ç–æ –ø'—î –ø—ñ—Å–ª—è –¥–µ–±–∞–≥—É.",
                    "404: –ñ–∞—Ä—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ... –∞–ª–µ –≤–∏ –∑–Ω–∞–π—à–ª–∏ —Ü–µ–π! üòÑ"
                ]
                st.info(random.choice(jokes))
                st.session_state.stats['jokes_told'] += 1
        
        with col2:
            if st.button("üé¨ –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º"):
                movies = ["–ú–∞—Ç—Ä–∏—Ü—è", "–§–æ—Ä–µ—Å—Ç –ì–∞–º–ø", "–ú–∞—Å–∫–∞", "–î–∂–æ–Ω –í—ñ–∫"]
                movie = random.choice(movies)
                st.success(f"–†–µ–∫–æ–º–µ–Ω–¥—É—é: **{movie}**")
                st.session_state.stats['movies_recommended'] += 1
        
        with col3:
            if st.button("üí° –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–∫—Ç"):
                facts = [
                    "–ö–æ–¥ 'Hello World' –Ω–∞–ø–∏—Å–∞–Ω–æ –º—ñ–ª—å—è—Ä–¥–∏ —Ä–∞–∑—ñ–≤!",
                    "–ü–µ—Ä—à–∏–π –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏–π –±–∞–≥ –±—É–≤ —Å–ø—Ä–∞–≤–∂–Ω—ñ–º –∂—É–∫–æ–º! üêõ"
                ]
                st.info(random.choice(facts))
    
    elif choice == "üéÆ –Ü–≥—Ä–∏":
        st.header("üéÆ –Ü–≥—Ä–∏")
        
        game_tabs = st.tabs(["üéØ –ö–∞–º—ñ–Ω—å-–ù–æ–∂–∏—Ü—ñ-–ü–∞–ø—ñ—Ä", "üî¢ –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ", "üß† –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞"])
        
        with game_tabs[0]:
            rock_paper_scissors()
        
        with game_tabs[1]:
            guess_number_game()
        
        with game_tabs[2]:
            simple_quiz()
    
    elif choice == "üòÑ –ê–Ω–µ–∫–¥–æ—Ç–∏":
        show_jokes()
    
    elif choice == "üé¨ –§—ñ–ª—å–º–∏":
        movie_recommendations()
    
    elif choice == "üßê –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏":
        interesting_facts()
    
    elif choice == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        show_statistics()
    
    # –§—É—Ç–µ—Ä
    st.markdown("---")
    st.markdown("*–°—Ç–≤–æ—Ä–µ–Ω–æ –∑ ‚ù§Ô∏è –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è*")

if __name__ == "__main__":
    main()